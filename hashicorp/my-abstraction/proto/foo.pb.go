// Code generated by protoc-gen-go. DO NOT EDIT.
// source: foo.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce1e2eec643ca48, []int{0}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type PutRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutRequest) Reset()         { *m = PutRequest{} }
func (m *PutRequest) String() string { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()    {}
func (*PutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce1e2eec643ca48, []int{1}
}

func (m *PutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRequest.Unmarshal(m, b)
}
func (m *PutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRequest.Marshal(b, m, deterministic)
}
func (m *PutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRequest.Merge(m, src)
}
func (m *PutRequest) XXX_Size() int {
	return xxx_messageInfo_PutRequest.Size(m)
}
func (m *PutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutRequest proto.InternalMessageInfo

func (m *PutRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DoCheckResponse struct {
	Check                bool     `protobuf:"varint,1,opt,name=check,proto3" json:"check,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoCheckResponse) Reset()         { *m = DoCheckResponse{} }
func (m *DoCheckResponse) String() string { return proto.CompactTextString(m) }
func (*DoCheckResponse) ProtoMessage()    {}
func (*DoCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce1e2eec643ca48, []int{2}
}

func (m *DoCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoCheckResponse.Unmarshal(m, b)
}
func (m *DoCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoCheckResponse.Marshal(b, m, deterministic)
}
func (m *DoCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoCheckResponse.Merge(m, src)
}
func (m *DoCheckResponse) XXX_Size() int {
	return xxx_messageInfo_DoCheckResponse.Size(m)
}
func (m *DoCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DoCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DoCheckResponse proto.InternalMessageInfo

func (m *DoCheckResponse) GetCheck() bool {
	if m != nil {
		return m.Check
	}
	return false
}

type ThisIsItRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThisIsItRequest) Reset()         { *m = ThisIsItRequest{} }
func (m *ThisIsItRequest) String() string { return proto.CompactTextString(m) }
func (*ThisIsItRequest) ProtoMessage()    {}
func (*ThisIsItRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce1e2eec643ca48, []int{3}
}

func (m *ThisIsItRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThisIsItRequest.Unmarshal(m, b)
}
func (m *ThisIsItRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThisIsItRequest.Marshal(b, m, deterministic)
}
func (m *ThisIsItRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThisIsItRequest.Merge(m, src)
}
func (m *ThisIsItRequest) XXX_Size() int {
	return xxx_messageInfo_ThisIsItRequest.Size(m)
}
func (m *ThisIsItRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ThisIsItRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ThisIsItRequest proto.InternalMessageInfo

func (m *ThisIsItRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type WaitForItRequest struct {
	ItServer             uint32   `protobuf:"varint,1,opt,name=it_server,json=itServer,proto3" json:"it_server,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitForItRequest) Reset()         { *m = WaitForItRequest{} }
func (m *WaitForItRequest) String() string { return proto.CompactTextString(m) }
func (*WaitForItRequest) ProtoMessage()    {}
func (*WaitForItRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce1e2eec643ca48, []int{4}
}

func (m *WaitForItRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitForItRequest.Unmarshal(m, b)
}
func (m *WaitForItRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitForItRequest.Marshal(b, m, deterministic)
}
func (m *WaitForItRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitForItRequest.Merge(m, src)
}
func (m *WaitForItRequest) XXX_Size() int {
	return xxx_messageInfo_WaitForItRequest.Size(m)
}
func (m *WaitForItRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitForItRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WaitForItRequest proto.InternalMessageInfo

func (m *WaitForItRequest) GetItServer() uint32 {
	if m != nil {
		return m.ItServer
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce1e2eec643ca48, []int{5}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Person struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age                  int32    `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	Salary               float64  `protobuf:"fixed64,3,opt,name=salary,proto3" json:"salary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce1e2eec643ca48, []int{6}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Person) GetSalary() float64 {
	if m != nil {
		return m.Salary
	}
	return 0
}

type SetPersonRequest struct {
	Person               *Person  `protobuf:"bytes,1,opt,name=person,proto3" json:"person,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetPersonRequest) Reset()         { *m = SetPersonRequest{} }
func (m *SetPersonRequest) String() string { return proto.CompactTextString(m) }
func (*SetPersonRequest) ProtoMessage()    {}
func (*SetPersonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce1e2eec643ca48, []int{7}
}

func (m *SetPersonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPersonRequest.Unmarshal(m, b)
}
func (m *SetPersonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPersonRequest.Marshal(b, m, deterministic)
}
func (m *SetPersonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPersonRequest.Merge(m, src)
}
func (m *SetPersonRequest) XXX_Size() int {
	return xxx_messageInfo_SetPersonRequest.Size(m)
}
func (m *SetPersonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPersonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetPersonRequest proto.InternalMessageInfo

func (m *SetPersonRequest) GetPerson() *Person {
	if m != nil {
		return m.Person
	}
	return nil
}

type SetPersonResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetPersonResponse) Reset()         { *m = SetPersonResponse{} }
func (m *SetPersonResponse) String() string { return proto.CompactTextString(m) }
func (*SetPersonResponse) ProtoMessage()    {}
func (*SetPersonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce1e2eec643ca48, []int{8}
}

func (m *SetPersonResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPersonResponse.Unmarshal(m, b)
}
func (m *SetPersonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPersonResponse.Marshal(b, m, deterministic)
}
func (m *SetPersonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPersonResponse.Merge(m, src)
}
func (m *SetPersonResponse) XXX_Size() int {
	return xxx_messageInfo_SetPersonResponse.Size(m)
}
func (m *SetPersonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPersonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetPersonResponse proto.InternalMessageInfo

func (m *SetPersonResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetPersonResponse struct {
	Person               *Person  `protobuf:"bytes,1,opt,name=person,proto3" json:"person,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPersonResponse) Reset()         { *m = GetPersonResponse{} }
func (m *GetPersonResponse) String() string { return proto.CompactTextString(m) }
func (*GetPersonResponse) ProtoMessage()    {}
func (*GetPersonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce1e2eec643ca48, []int{9}
}

func (m *GetPersonResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPersonResponse.Unmarshal(m, b)
}
func (m *GetPersonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPersonResponse.Marshal(b, m, deterministic)
}
func (m *GetPersonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPersonResponse.Merge(m, src)
}
func (m *GetPersonResponse) XXX_Size() int {
	return xxx_messageInfo_GetPersonResponse.Size(m)
}
func (m *GetPersonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPersonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPersonResponse proto.InternalMessageInfo

func (m *GetPersonResponse) GetPerson() *Person {
	if m != nil {
		return m.Person
	}
	return nil
}

type GetPersonRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPersonRequest) Reset()         { *m = GetPersonRequest{} }
func (m *GetPersonRequest) String() string { return proto.CompactTextString(m) }
func (*GetPersonRequest) ProtoMessage()    {}
func (*GetPersonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce1e2eec643ca48, []int{10}
}

func (m *GetPersonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPersonRequest.Unmarshal(m, b)
}
func (m *GetPersonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPersonRequest.Marshal(b, m, deterministic)
}
func (m *GetPersonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPersonRequest.Merge(m, src)
}
func (m *GetPersonRequest) XXX_Size() int {
	return xxx_messageInfo_GetPersonRequest.Size(m)
}
func (m *GetPersonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPersonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPersonRequest proto.InternalMessageInfo

func (m *GetPersonRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*GetResponse)(nil), "proto.GetResponse")
	proto.RegisterType((*PutRequest)(nil), "proto.PutRequest")
	proto.RegisterType((*DoCheckResponse)(nil), "proto.DoCheckResponse")
	proto.RegisterType((*ThisIsItRequest)(nil), "proto.ThisIsItRequest")
	proto.RegisterType((*WaitForItRequest)(nil), "proto.WaitForItRequest")
	proto.RegisterType((*Empty)(nil), "proto.Empty")
	proto.RegisterType((*Person)(nil), "proto.Person")
	proto.RegisterType((*SetPersonRequest)(nil), "proto.SetPersonRequest")
	proto.RegisterType((*SetPersonResponse)(nil), "proto.SetPersonResponse")
	proto.RegisterType((*GetPersonResponse)(nil), "proto.GetPersonResponse")
	proto.RegisterType((*GetPersonRequest)(nil), "proto.GetPersonRequest")
}

func init() { proto.RegisterFile("foo.proto", fileDescriptor_7ce1e2eec643ca48) }

var fileDescriptor_7ce1e2eec643ca48 = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xd1, 0x6a, 0xe2, 0x40,
	0x14, 0x25, 0xc9, 0x26, 0x9a, 0xeb, 0xba, 0xc6, 0x61, 0x71, 0x83, 0xfb, 0x22, 0x23, 0xab, 0xc2,
	0x82, 0x2e, 0x59, 0x28, 0xb4, 0x0f, 0xbe, 0xd8, 0x1a, 0x7c, 0x93, 0xb1, 0xd0, 0xc7, 0x92, 0xea,
	0xb4, 0x86, 0xaa, 0x93, 0x66, 0xc6, 0x82, 0x7f, 0xdb, 0x4f, 0x29, 0x8e, 0x93, 0x54, 0x27, 0xb4,
	0xf8, 0x94, 0x9c, 0xb9, 0xe7, 0x9c, 0x7b, 0xb9, 0xf7, 0x80, 0xfb, 0xc8, 0x58, 0x3f, 0x49, 0x99,
	0x60, 0xc8, 0x96, 0x1f, 0xdc, 0x85, 0x4a, 0x48, 0x05, 0xa1, 0x3c, 0x61, 0x1b, 0x4e, 0x91, 0x0f,
	0xa5, 0x35, 0xe5, 0x3c, 0x7a, 0xa2, 0xbe, 0xd1, 0x32, 0x7a, 0x2e, 0xc9, 0x20, 0xee, 0x00, 0x4c,
	0xb7, 0x82, 0xd0, 0x97, 0x2d, 0xe5, 0xe2, 0x0b, 0x5e, 0x17, 0x6a, 0xd7, 0x6c, 0xb4, 0xa4, 0xf3,
	0xe7, 0xdc, 0xf4, 0x27, 0xd8, 0xf3, 0xfd, 0x83, 0xa4, 0x96, 0xc9, 0x01, 0xe0, 0xbf, 0x50, 0xbb,
	0x5d, 0xc6, 0x7c, 0xc2, 0x27, 0x67, 0xb8, 0x0e, 0xc0, 0xbb, 0x8b, 0x62, 0x31, 0x66, 0xe9, 0x07,
	0xfb, 0x37, 0xb8, 0xb1, 0xb8, 0xe7, 0x34, 0x7d, 0xa5, 0xa9, 0xe4, 0x57, 0x49, 0x39, 0x16, 0x33,
	0x89, 0x71, 0x09, 0xec, 0x9b, 0x75, 0x22, 0x76, 0x78, 0x0c, 0xce, 0x94, 0xa6, 0x9c, 0x6d, 0x10,
	0x82, 0x6f, 0x9b, 0x68, 0x9d, 0x59, 0xcb, 0x7f, 0xe4, 0x81, 0xb5, 0xef, 0x66, 0xb6, 0x8c, 0x9e,
	0x4d, 0xf6, 0xbf, 0xa8, 0x01, 0x0e, 0x8f, 0x56, 0x51, 0xba, 0xf3, 0xad, 0x96, 0xd1, 0x33, 0x88,
	0x42, 0xf8, 0x12, 0xbc, 0x19, 0x15, 0x07, 0xab, 0x6c, 0x82, 0x3f, 0xe0, 0x24, 0xf2, 0x41, 0x7a,
	0x56, 0x82, 0xea, 0x61, 0xb7, 0x7d, 0xc5, 0x52, 0x45, 0xdc, 0x86, 0xfa, 0x91, 0x54, 0x2d, 0xe5,
	0x07, 0x98, 0xf1, 0x42, 0xea, 0x6c, 0x62, 0xc6, 0x0b, 0x7c, 0x05, 0xf5, 0xb0, 0x40, 0x3a, 0xb3,
	0x01, 0x06, 0x2f, 0xd4, 0x67, 0xd3, 0xfc, 0x83, 0x37, 0x13, 0xac, 0x31, 0x63, 0xa8, 0x0b, 0x56,
	0x48, 0x05, 0xfa, 0xae, 0x9c, 0xe4, 0x92, 0x9a, 0x48, 0xa1, 0xe3, 0x28, 0x74, 0xc0, 0x9a, 0x6e,
	0x05, 0xaa, 0x67, 0x2d, 0xf3, 0xe3, 0x37, 0x4f, 0xb4, 0x68, 0x00, 0x25, 0x75, 0x70, 0xcd, 0xb4,
	0xa1, 0x90, 0x1e, 0x87, 0x36, 0xd8, 0xa3, 0x15, 0xe3, 0x54, 0xa3, 0x9f, 0xba, 0x06, 0xe0, 0xe6,
	0x07, 0x47, 0xbf, 0x54, 0x49, 0x8f, 0x80, 0xa6, 0x19, 0x82, 0x9b, 0xef, 0x39, 0xd7, 0xe8, 0x47,
	0x6b, 0xfa, 0xc5, 0x82, 0x1a, 0x6c, 0x08, 0x6e, 0x58, 0xd0, 0x87, 0x9f, 0xe9, 0x0b, 0xd7, 0x0a,
	0x2e, 0xc0, 0x9c, 0x08, 0xf4, 0x0f, 0xca, 0x59, 0xae, 0x51, 0xb6, 0x02, 0x2d, 0xe8, 0xa7, 0x73,
	0x3f, 0x38, 0x12, 0xfc, 0x7f, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x41, 0x5a, 0x77, 0xd4, 0x9e, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FooClient is the client API for Foo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FooClient interface {
	Get(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetResponse, error)
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*Empty, error)
	DoCheck(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*DoCheckResponse, error)
	Close(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	WaitForIt(ctx context.Context, in *WaitForItRequest, opts ...grpc.CallOption) (*Empty, error)
	SetPerson(ctx context.Context, in *SetPersonRequest, opts ...grpc.CallOption) (*SetPersonResponse, error)
	GetPerson(ctx context.Context, in *GetPersonRequest, opts ...grpc.CallOption) (*GetPersonResponse, error)
}

type fooClient struct {
	cc *grpc.ClientConn
}

func NewFooClient(cc *grpc.ClientConn) FooClient {
	return &fooClient{cc}
}

func (c *fooClient) Get(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/proto.Foo/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fooClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.Foo/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fooClient) DoCheck(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*DoCheckResponse, error) {
	out := new(DoCheckResponse)
	err := c.cc.Invoke(ctx, "/proto.Foo/DoCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fooClient) Close(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.Foo/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fooClient) WaitForIt(ctx context.Context, in *WaitForItRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.Foo/WaitForIt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fooClient) SetPerson(ctx context.Context, in *SetPersonRequest, opts ...grpc.CallOption) (*SetPersonResponse, error) {
	out := new(SetPersonResponse)
	err := c.cc.Invoke(ctx, "/proto.Foo/SetPerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fooClient) GetPerson(ctx context.Context, in *GetPersonRequest, opts ...grpc.CallOption) (*GetPersonResponse, error) {
	out := new(GetPersonResponse)
	err := c.cc.Invoke(ctx, "/proto.Foo/GetPerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FooServer is the server API for Foo service.
type FooServer interface {
	Get(context.Context, *Empty) (*GetResponse, error)
	Put(context.Context, *PutRequest) (*Empty, error)
	DoCheck(context.Context, *Empty) (*DoCheckResponse, error)
	Close(context.Context, *Empty) (*Empty, error)
	WaitForIt(context.Context, *WaitForItRequest) (*Empty, error)
	SetPerson(context.Context, *SetPersonRequest) (*SetPersonResponse, error)
	GetPerson(context.Context, *GetPersonRequest) (*GetPersonResponse, error)
}

func RegisterFooServer(s *grpc.Server, srv FooServer) {
	s.RegisterService(&_Foo_serviceDesc, srv)
}

func _Foo_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FooServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Foo/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FooServer).Get(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Foo_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FooServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Foo/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FooServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Foo_DoCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FooServer).DoCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Foo/DoCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FooServer).DoCheck(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Foo_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FooServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Foo/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FooServer).Close(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Foo_WaitForIt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WaitForItRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FooServer).WaitForIt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Foo/WaitForIt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FooServer).WaitForIt(ctx, req.(*WaitForItRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Foo_SetPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FooServer).SetPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Foo/SetPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FooServer).SetPerson(ctx, req.(*SetPersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Foo_GetPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FooServer).GetPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Foo/GetPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FooServer).GetPerson(ctx, req.(*GetPersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Foo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Foo",
	HandlerType: (*FooServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Foo_Get_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _Foo_Put_Handler,
		},
		{
			MethodName: "DoCheck",
			Handler:    _Foo_DoCheck_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _Foo_Close_Handler,
		},
		{
			MethodName: "WaitForIt",
			Handler:    _Foo_WaitForIt_Handler,
		},
		{
			MethodName: "SetPerson",
			Handler:    _Foo_SetPerson_Handler,
		},
		{
			MethodName: "GetPerson",
			Handler:    _Foo_GetPerson_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "foo.proto",
}

// ItClient is the client API for It service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ItClient interface {
	ThisIsIt(ctx context.Context, in *ThisIsItRequest, opts ...grpc.CallOption) (*Empty, error)
}

type itClient struct {
	cc *grpc.ClientConn
}

func NewItClient(cc *grpc.ClientConn) ItClient {
	return &itClient{cc}
}

func (c *itClient) ThisIsIt(ctx context.Context, in *ThisIsItRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.It/ThisIsIt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ItServer is the server API for It service.
type ItServer interface {
	ThisIsIt(context.Context, *ThisIsItRequest) (*Empty, error)
}

func RegisterItServer(s *grpc.Server, srv ItServer) {
	s.RegisterService(&_It_serviceDesc, srv)
}

func _It_ThisIsIt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ThisIsItRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItServer).ThisIsIt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.It/ThisIsIt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItServer).ThisIsIt(ctx, req.(*ThisIsItRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _It_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.It",
	HandlerType: (*ItServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ThisIsIt",
			Handler:    _It_ThisIsIt_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "foo.proto",
}
